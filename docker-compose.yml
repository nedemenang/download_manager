version: "3"

services:
  redis:
    image: redis:alpine
    ports:
      - 6379:6379
    restart: always
    networks:
      - webnet
    # command: ["redis-server", "--bind", "redis", "--port", "6379"]

  mongodb:
    image: mongo:latest
    environment:
      - MONGODB_DATABASE="downloads"
    ports:
      - 27017:27017
    networks:
      - webnet

  backend:
    image: backend_app
    build: ./backend
    ports:
      - "4000:4000"
    volumes:
      - ./backend:/app/backend
      - /app/node_modules
    command: npm run start:prod
    depends_on:
      - redis
      - mongodb
    networks:
      - webnet
    environment:
      REDIS_HOST: redis

  frontend:
    image: frontend_app
    build: ./frontend
    volumes:
      - ./frontend:/app/frontend
      # One-way volume to use node_modules from inside image
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
    stdin_open: true
    depends_on:
      - backend
    command: npm start

networks:
  webnet:
    driver: bridge
